<?xml version="1.0" encoding="utf-8"?>
<Invoice xmlns="urn:oasis:names:specification:ubl:schema:xsd:Invoice-2" xmlns:cac="urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2" xmlns:cbc="urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2" xmlns:ccts="urn:un:unece:uncefact:documentation:2" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:ext="urn:oasis:names:specification:ubl:schema:xsd:CommonExtensionComponents-2" xmlns:qdt="urn:oasis:names:specification:ubl:schema:xsd:QualifiedDatatypes-2" xmlns:ubltr="urn:oasis:names:specification:ubl:schema:xsd:TurkishCustomizationExtensionComponents" xmlns:udt="urn:un:unece:uncefact:data:specification:UnqualifiedDataTypesSchemaModule:2" xmlns:xades="http://uri.etsi.org/01903/v1.3.2#">
  <ext:UBLExtensions>
    <ext:UBLExtension>
      <ext:ExtensionContent />
    </ext:UBLExtension>
  </ext:UBLExtensions>
  <cbc:UBLVersionID>2.1</cbc:UBLVersionID>
  <cbc:CustomizationID>TR1.2</cbc:CustomizationID>
  <cbc:ProfileID>IHRACAT</cbc:ProfileID>
  <cbc:ID>B002017050</cbc:ID>
  <cbc:CopyIndicator>false</cbc:CopyIndicator>
  <cbc:UUID>2941F1B0-9D60-48E0-9641-EB8DC1903744</cbc:UUID>
  <cbc:IssueDate>2018-03-03</cbc:IssueDate>
  <cbc:IssueTime>22:24:41</cbc:IssueTime>
  <cbc:InvoiceTypeCode>ISTISNA</cbc:InvoiceTypeCode>
  <cbc:Note>#SICIL Ticaret sicil no:338</cbc:Note>
  <cbc:Note>#// // OnDortBin BesYuzYirmiSekiz , USD</cbc:Note>
  <cbc:Note>#NAKLIYE Nakliye Tutarı : 100.00 USD</cbc:Note>
  <cbc:Note>#SIGORTA Sigorta Tutarı : 50.00 USD</cbc:Note>
  <cbc:Note>#AMBALAJ Ambalaj Tutarı : 150.00 USD</cbc:Note>
  <cbc:Note>#TOPHZMT Hizmet Tutarı :  300.00 USD</cbc:Note>
  <cbc:Note>#NETAGR Net Ağırlık : 10 KG</cbc:Note>
  <cbc:Note>#KOLAGR Koli Ağırlığı  : 100 KG</cbc:Note>
  <cbc:Note>#KOLSAY Koli Sayısı   : 5 ADET</cbc:Note>
  <cbc:Note>#URNSAY Ürün Sayısı  : 23 ADET</cbc:Note>
  <cbc:Note>#NOTA Ödeme Sekli: Pesin</cbc:Note>
  <cbc:Note>#NOTB Araci Banka: Anadolubank Samsun Sb/TR</cbc:Note>
  <cbc:Note>#NOTC </cbc:Note>
  <cbc:Note>#NOTD </cbc:Note>
  <cbc:Note>#NOTE FCA</cbc:Note>
  <cbc:Note>#NOTF Mal Mukabili</cbc:Note>
  <cbc:Note>#NOTG TUTLINGEN   </cbc:Note>
  <cbc:Note>#NOTH ERMIS Medikal Falan filan falan YAKUP BAHADIR  TUTTLINGEN  GERMANY</cbc:Note>
  <cbc:Note>#BANKA Banka: Ziraat Bankası Samsun Şubesi Hesap No:39927956-5001/TR IBAN No: TR76 0001 0002 2239 9279 5650 01</cbc:Note>
  <cbc:DocumentCurrencyCode>USD</cbc:DocumentCurrencyCode>
  <cbc:LineCountNumeric>3</cbc:LineCountNumeric>
  <cac:OrderReference>
    <cbc:ID />
    <cbc:IssueDate>--</cbc:IssueDate>
  </cac:OrderReference>
  <cac:DespatchDocumentReference>
    <cbc:ID />
    <cbc:IssueDate>--</cbc:IssueDate>
  </cac:DespatchDocumentReference>
  <cac:AdditionalDocumentReference>
    <cbc:ID>B002017050</cbc:ID>
    <cbc:IssueDate>2018-03-03</cbc:IssueDate>
    <cbc:DocumentType>XSLT</cbc:DocumentType>
    <cac:Attachment>
      <cbc:EmbeddedDocumentBinaryObject characterSetCode="UTF-8" encodingCode="Base64" filename="B002017050.xslt" mimeCode="application/xml"></cbc:EmbeddedDocumentBinaryObject>
    </cac:Attachment>
  </cac:AdditionalDocumentReference>
  <cac:Signature>
    <cbc:ID schemeID="VKN_TCKN">1310105178</cbc:ID>
    <cac:SignatoryParty>
      <cac:PartyIdentification>
        <cbc:ID schemeID="VKN">1310105178</cbc:ID>
      </cac:PartyIdentification>
      <cac:PostalAddress>
        <cbc:Room />
        <cbc:StreetName>Vali Erdoğan Cebeci Bulv.  </cbc:StreetName>
        <cbc:BuildingName>Bahadır </cbc:BuildingName>
        <cbc:BuildingNumber>  29-31  </cbc:BuildingNumber>
        <cbc:CitySubdivisionName>Organize Sanayi Bölgesi  </cbc:CitySubdivisionName>
        <cbc:CityName>  Tekkeköy  </cbc:CityName>
        <cbc:PostalZone>  55300  </cbc:PostalZone>
        <cbc:Region>  Samsun  </cbc:Region>
        <cac:Country>
          <cbc:Name> TÜRKİYE</cbc:Name>
        </cac:Country>
      </cac:PostalAddress>
    </cac:SignatoryParty>
    <cac:DigitalSignatureAttachment>
      <cac:ExternalReference>
        <cbc:URI>#Signature_BHDB002017050</cbc:URI>
      </cac:ExternalReference>
    </cac:DigitalSignatureAttachment>
  </cac:Signature>
  <cac:AccountingSupplierParty>
    <cac:Party>
      <cbc:WebsiteURI>http://www.bahadir.com.tr/</cbc:WebsiteURI>
      <cac:PartyIdentification>
        <cbc:ID schemeID="VKN">1310105178</cbc:ID>
      </cac:PartyIdentification>
      <cac:PartyName>
        <cbc:Name>BAHADIR TIBBI ALET CİHAZ VE İNŞAAT MAKİNE SANAYİ VE TİCARET AŞ.</cbc:Name>
      </cac:PartyName>
      <cac:PostalAddress>
        <cbc:Room />
        <cbc:StreetName>Vali Erdoğan Cebeci Bul.  </cbc:StreetName>
        <cbc:BuildingName> Bahadır </cbc:BuildingName>
        <cbc:BuildingNumber>  29-31  </cbc:BuildingNumber>
        <cbc:CitySubdivisionName>  Organize Sanayi Bölgesi  </cbc:CitySubdivisionName>
        <cbc:CityName>  Tekkeköy  </cbc:CityName>
        <cbc:PostalZone> 55300 </cbc:PostalZone>
        <cbc:Region> Samsun </cbc:Region>
        <cac:Country>
          <cbc:Name> TR </cbc:Name>
        </cac:Country>
      </cac:PostalAddress>
      <cac:PartyTaxScheme>
        <cac:TaxScheme>
          <cbc:Name>19 Mayıs</cbc:Name>
        </cac:TaxScheme>
      </cac:PartyTaxScheme>
      <cac:Contact>
        <cbc:Telephone>+90 362 266 70 00  </cbc:Telephone>
        <cbc:Telefax>+90 362 266 70 05  </cbc:Telefax>
        <cbc:ElectronicMail>info@bahadir.com.tr  </cbc:ElectronicMail>
      </cac:Contact>
    </cac:Party>
  </cac:AccountingSupplierParty>
  <cac:AccountingCustomerParty>
    <cac:Party>
      <cac:WebsiteURI />
      <cac:PartyIdentification>
        <cbc:ID schemeID="VKN">1460415308</cbc:ID>
      </cac:PartyIdentification>
      <cac:PartyName>
        <cbc:Name>Gümrük ve Ticaret Bakanlığı Gümrükler Genel Müdürlüğü-Bilgi İşlem Dairesi Başkanlığı </cbc:Name>
      </cac:PartyName>
      <cac:PostalAddress>
        <cbc:Room />
        <cbc:StreetName>Üniversiteler Mahallesi Dumlupınar Bulvarı</cbc:StreetName>
        <cbc:BuildingName />
        <cbc:BuildingNumber>151</cbc:BuildingNumber>
        <cbc:CitySubdivisionName>Çankaya</cbc:CitySubdivisionName>
        <cbc:CityName>Ankara</cbc:CityName>
        <cbc:PostalZone />
        <cbc:Region />
        <cac:Country>
          <cbc:Name>Türkiye</cbc:Name>
        </cac:Country>
      </cac:PostalAddress>
      <cac:PartyTaxScheme>
        <cac:TaxScheme>
          <cbc:Name>Ulus</cbc:Name>
        </cac:TaxScheme>
      </cac:PartyTaxScheme>
      <cac:Contact>
        <cbc:Telephone />
        <cbc:Telefax />
        <cbc:ElectronicMail />
      </cac:Contact>
    </cac:Party>
  </cac:AccountingCustomerParty>
  <cac:BuyerCustomerParty>
    <cac:Party>
      <cac:PartyIdentification>
        <cbc:ID schemeID="PARTYTYPE">EXPORT</cbc:ID>
      </cac:PartyIdentification>
      <cac:PartyName>
        <cbc:Name>ERMİŞ Med Tech GmbH</cbc:Name>
      </cac:PartyName>
      <cac:PostalAddress>
        <cbc:CitySubdivisionName>DORNIERSTRABE 49 78532</cbc:CitySubdivisionName>
        <cbc:CityName>TUTLINGEN   </cbc:CityName>
        <cac:Country>
          <cbc:Name>GERMANY     </cbc:Name>
        </cac:Country>
      </cac:PostalAddress>
      <cac:PartyLegalEntity>
        <cbc:RegistrationName>ERMİŞ</cbc:RegistrationName>
        <cbc:CompanyID>ERMİŞ Med Tech GmbH</cbc:CompanyID>
      </cac:PartyLegalEntity>
    </cac:Party>
  </cac:BuyerCustomerParty>
  <cac:Delivery>
    <cac:Shipment>
      <cbc:ID />
      <cbc:DeclaredCustomsValueAmount currencyID="USD">14528.00</cbc:DeclaredCustomsValueAmount>
    </cac:Shipment>
  </cac:Delivery>
  <cac:AllowanceCharge>
    <cbc:ChargeIndicator>false</cbc:ChargeIndicator>
    <cbc:Amount currencyID="USD">5</cbc:Amount>
  </cac:AllowanceCharge>
  <cac:PricingExchangeRate>
    <cbc:SourceCurrencyCode>USD</cbc:SourceCurrencyCode>
    <cbc:TargetCurrencyCode>USD</cbc:TargetCurrencyCode>
    <cbc:CalculationRate>3.569</cbc:CalculationRate>
  </cac:PricingExchangeRate>
  <cac:TaxTotal>
    <cbc:TaxAmount currencyID="USD">1851.41</cbc:TaxAmount>
    <cac:TaxSubtotal>
      <cbc:TaxableAmount currencyID="USD">14528.00</cbc:TaxableAmount>
      <cbc:TaxAmount currencyID="USD">1851.41</cbc:TaxAmount>
      <cbc:CalculationSequenceNumeric>1</cbc:CalculationSequenceNumeric>
      <cbc:Percent>15</cbc:Percent>
      <cac:TaxCategory>
        <cbc:TaxExemptionReasonCode>301</cbc:TaxExemptionReasonCode>
        <cbc:TaxExemptionReason>11/1-a Mal ihracatı</cbc:TaxExemptionReason>
        <cac:TaxScheme>
          <cbc:Name>KDV</cbc:Name>
          <cbc:TaxTypeCode>0015</cbc:TaxTypeCode>
        </cac:TaxScheme>
      </cac:TaxCategory>
    </cac:TaxSubtotal>
  </cac:TaxTotal>
  <cac:LegalMonetaryTotal>
    <cbc:LineExtensionAmount currencyID="USD">12676.59</cbc:LineExtensionAmount>
    <cbc:TaxExclusiveAmount currencyID="USD">1851.41</cbc:TaxExclusiveAmount>
    <cbc:TaxInclusiveAmount currencyID="USD">12342.76</cbc:TaxInclusiveAmount>
    <cbc:AllowanceTotalAmount currencyID="USD">633.83</cbc:AllowanceTotalAmount>
    <cbc:ChargeTotalAmount currencyID="USD">300.00</cbc:ChargeTotalAmount>
    <cbc:PayableAmount currencyID="USD">14528.00</cbc:PayableAmount>
  </cac:LegalMonetaryTotal>
  <cac:InvoiceLine>
    <cbc:ID>1</cbc:ID>
    <cbc:InvoicedQuantity unitCode="NIU">11</cbc:InvoicedQuantity>
    <cbc:LineExtensionAmount currencyID="USD">5264.05</cbc:LineExtensionAmount>
    <cac:Delivery>
      <cac:DeliveryAddress>
        <cbc:StreetName />
        <cbc:BuildingName />
        <cbc:BuildingNumber />
        <cbc:CitySubdivisionName />
        <cbc:CityName />
        <cbc:PostalZone />
        <cac:Country>
          <cbc:name>TUTLINGEN</cbc:name>
        </cac:Country>
      </cac:DeliveryAddress>
    </cac:Delivery>
    <cac:DeliveryTerms>
      <cbc:ID schemeID="INCOTERMS">FCA</cbc:ID>
    </cac:DeliveryTerms>
    <cac:Shipment>
      <cbc:ID />
      <cbc:DeclaredCustomsValueAmount currencyID="USD">5264.05</cbc:DeclaredCustomsValueAmount>
    </cac:Shipment>
    <cac:GoodsItem>
      <cac:RequiredCustomsID />
    </cac:GoodsItem>
    <cac:ShipmentStage>
      <cbc:TransportModeCode>3</cbc:TransportModeCode>
    </cac:ShipmentStage>
    <cac:TransportHandlingUnit>
      <cac:ActualPackage>
        <cbc:ID />
        <cbc:Quantity />
        <cbc:PackagingTypeCode>CT</cbc:PackagingTypeCode>
      </cac:ActualPackage>
    </cac:TransportHandlingUnit>
    <cac:AllowanceCharge>
      <cbc:ChargeIndicator>false</cbc:ChargeIndicator>
      <cbc:AllowanceChargeReason>İskonto</cbc:AllowanceChargeReason>
      <cbc:MultiplierFactorNumeric>5</cbc:MultiplierFactorNumeric>
      <cbc:Amount currencyID="USD">24.57</cbc:Amount>
      <cbc:BaseAmount currencyID="USD">5264.05</cbc:BaseAmount>
    </cac:AllowanceCharge>
    <cac:AllowanceCharge>
      <cbc:ChargeIndicator>true</cbc:ChargeIndicator>
      <cbc:AllowanceChargeReason>Navlun</cbc:AllowanceChargeReason>
      <cbc:Amount currencyID="USD">11.63</cbc:Amount>
      <cbc:BaseAmount currencyID="USD">5264.05</cbc:BaseAmount>
    </cac:AllowanceCharge>
    <cac:TaxTotal>
      <cbc:TaxAmount currencyID="USD">71.78</cbc:TaxAmount>
      <cac:TaxSubTotal>
        <cbc:TaxableAmount currencyID="USD">5264.05</cbc:TaxableAmount>
        <cbc:TaxAmount currencyID="USD">62.96</cbc:TaxAmount>
        <cbc:CalculationSequenceNumeric>1</cbc:CalculationSequenceNumeric>
        <cbc:Percent>15</cbc:Percent>
        <cac:TaxCatagory>
          <cac:TaxScheme>
            <cbc:Name>KDV</cbc:Name>
            <cbc:TaxTypeCode>0015</cbc:TaxTypeCode>
          </cac:TaxScheme>
        </cac:TaxCatagory>
      </cac:TaxSubTotal>
    </cac:TaxTotal>
    <cac:Item>
      <cbc:Description>Adet</cbc:Description>
      <cbc:Name>YASARGIL SONDA UC.DKS.KLV.SL.EGR.18.5CM</cbc:Name>
    </cac:Item>
    <cac:SellersItemIdentification>
      <cbc:ID>K 111.00  </cbc:ID>
    </cac:SellersItemIdentification>
    <cac:Price>
      <cbc:PriceAmount currencyID="USD">491.49</cbc:PriceAmount>
    </cac:Price>
  </cac:InvoiceLine>
  <cac:InvoiceLine>
    <cbc:ID>2</cbc:ID>
    <cbc:InvoicedQuantity unitCode="NIU">10</cbc:InvoicedQuantity>
    <cbc:LineExtensionAmount currencyID="USD">5315.90</cbc:LineExtensionAmount>
    <cac:Delivery>
      <cac:DeliveryAddress>
        <cbc:StreetName />
        <cbc:BuildingName />
        <cbc:BuildingNumber />
        <cbc:CitySubdivisionName />
        <cbc:CityName />
        <cbc:PostalZone />
        <cac:Country>
          <cbc:name>TUTLINGEN</cbc:name>
        </cac:Country>
      </cac:DeliveryAddress>
    </cac:Delivery>
    <cac:DeliveryTerms>
      <cbc:ID schemeID="INCOTERMS">FCA</cbc:ID>
    </cac:DeliveryTerms>
    <cac:Shipment>
      <cbc:ID />
      <cbc:DeclaredCustomsValueAmount currencyID="USD">5315.90</cbc:DeclaredCustomsValueAmount>
    </cac:Shipment>
    <cac:GoodsItem>
      <cac:RequiredCustomsID />
    </cac:GoodsItem>
    <cac:ShipmentStage>
      <cbc:TransportModeCode>3</cbc:TransportModeCode>
    </cac:ShipmentStage>
    <cac:TransportHandlingUnit>
      <cac:ActualPackage>
        <cbc:ID />
        <cbc:Quantity />
        <cbc:PackagingTypeCode>CT</cbc:PackagingTypeCode>
      </cac:ActualPackage>
    </cac:TransportHandlingUnit>
    <cac:AllowanceCharge>
      <cbc:ChargeIndicator>false</cbc:ChargeIndicator>
      <cbc:AllowanceChargeReason>İskonto</cbc:AllowanceChargeReason>
      <cbc:MultiplierFactorNumeric>5</cbc:MultiplierFactorNumeric>
      <cbc:Amount currencyID="USD">27.30</cbc:Amount>
      <cbc:BaseAmount currencyID="USD">5315.90</cbc:BaseAmount>
    </cac:AllowanceCharge>
    <cac:AllowanceCharge>
      <cbc:ChargeIndicator>true</cbc:ChargeIndicator>
      <cbc:AllowanceChargeReason>Navlun</cbc:AllowanceChargeReason>
      <cbc:Amount currencyID="USD">12.92</cbc:Amount>
      <cbc:BaseAmount currencyID="USD">5315.90</cbc:BaseAmount>
    </cac:AllowanceCharge>
    <cac:TaxTotal>
      <cbc:TaxAmount currencyID="USD">79.74</cbc:TaxAmount>
      <cac:TaxSubTotal>
        <cbc:TaxableAmount currencyID="USD">5315.90</cbc:TaxableAmount>
        <cbc:TaxAmount currencyID="USD">69.93</cbc:TaxAmount>
        <cbc:CalculationSequenceNumeric>1</cbc:CalculationSequenceNumeric>
        <cbc:Percent>15</cbc:Percent>
        <cac:TaxCatagory>
          <cac:TaxScheme>
            <cbc:Name>KDV</cbc:Name>
            <cbc:TaxTypeCode>0015</cbc:TaxTypeCode>
          </cac:TaxScheme>
        </cac:TaxCatagory>
      </cac:TaxSubTotal>
    </cac:TaxTotal>
    <cac:Item>
      <cbc:Description>Takim</cbc:Description>
      <cbc:Name>KONTEYNER,DELIKSIZ KUTU,580X280X100MM</cbc:Name>
    </cac:Item>
    <cac:SellersItemIdentification>
      <cbc:ID>Y 110.10  </cbc:ID>
    </cac:SellersItemIdentification>
    <cac:Price>
      <cbc:PriceAmount currencyID="USD">545.97</cbc:PriceAmount>
    </cac:Price>
  </cac:InvoiceLine>
  <cac:InvoiceLine>
    <cbc:ID>3</cbc:ID>
    <cbc:InvoicedQuantity unitCode="NIU">2</cbc:InvoicedQuantity>
    <cbc:LineExtensionAmount currencyID="USD">1762.82</cbc:LineExtensionAmount>
    <cac:Delivery>
      <cac:DeliveryAddress>
        <cbc:StreetName />
        <cbc:BuildingName />
        <cbc:BuildingNumber />
        <cbc:CitySubdivisionName />
        <cbc:CityName />
        <cbc:PostalZone />
        <cac:Country>
          <cbc:name>TUTLINGEN</cbc:name>
        </cac:Country>
      </cac:DeliveryAddress>
    </cac:Delivery>
    <cac:DeliveryTerms>
      <cbc:ID schemeID="INCOTERMS">FCA</cbc:ID>
    </cac:DeliveryTerms>
    <cac:Shipment>
      <cbc:ID />
      <cbc:DeclaredCustomsValueAmount currencyID="USD">1762.82</cbc:DeclaredCustomsValueAmount>
    </cac:Shipment>
    <cac:GoodsItem>
      <cac:RequiredCustomsID />
    </cac:GoodsItem>
    <cac:ShipmentStage>
      <cbc:TransportModeCode>3</cbc:TransportModeCode>
    </cac:ShipmentStage>
    <cac:TransportHandlingUnit>
      <cac:ActualPackage>
        <cbc:ID />
        <cbc:Quantity />
        <cbc:PackagingTypeCode>CT</cbc:PackagingTypeCode>
      </cac:ActualPackage>
    </cac:TransportHandlingUnit>
    <cac:AllowanceCharge>
      <cbc:ChargeIndicator>false</cbc:ChargeIndicator>
      <cbc:AllowanceChargeReason>İskonto</cbc:AllowanceChargeReason>
      <cbc:MultiplierFactorNumeric>5</cbc:MultiplierFactorNumeric>
      <cbc:Amount currencyID="USD">45.26</cbc:Amount>
      <cbc:BaseAmount currencyID="USD">1762.82</cbc:BaseAmount>
    </cac:AllowanceCharge>
    <cac:AllowanceCharge>
      <cbc:ChargeIndicator>true</cbc:ChargeIndicator>
      <cbc:AllowanceChargeReason>Navlun</cbc:AllowanceChargeReason>
      <cbc:Amount currencyID="USD">21.42</cbc:Amount>
      <cbc:BaseAmount currencyID="USD">1762.82</cbc:BaseAmount>
    </cac:AllowanceCharge>
    <cac:TaxTotal>
      <cbc:TaxAmount currencyID="USD">132.21</cbc:TaxAmount>
      <cac:TaxSubTotal>
        <cbc:TaxableAmount currencyID="USD">1762.82</cbc:TaxableAmount>
        <cbc:TaxAmount currencyID="USD">115.96</cbc:TaxAmount>
        <cbc:CalculationSequenceNumeric>1</cbc:CalculationSequenceNumeric>
        <cbc:Percent>15</cbc:Percent>
        <cac:TaxCatagory>
          <cac:TaxScheme>
            <cbc:Name>KDV</cbc:Name>
            <cbc:TaxTypeCode>0015</cbc:TaxTypeCode>
          </cac:TaxScheme>
        </cac:TaxCatagory>
      </cac:TaxSubTotal>
    </cac:TaxTotal>
    <cac:Item>
      <cbc:Description>Adet</cbc:Description>
      <cbc:Name>MIKRO MAKAS DUZ 10.5 CM</cbc:Name>
    </cac:Item>
    <cac:SellersItemIdentification>
      <cbc:ID>C 100.00  </cbc:ID>
    </cac:SellersItemIdentification>
    <cac:Price>
      <cbc:PriceAmount currencyID="USD">905.25</cbc:PriceAmount>
    </cac:Price>
  </cac:InvoiceLine>
</Invoice>